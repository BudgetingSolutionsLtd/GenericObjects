#region Prolog

#Region PROCESS LOGGING
pPrologNow = Now; 
# Catch errors with if statement and do nErrors = nErrors+1;
nErrors = 0;   
# Redefine message depending on if statement that handled the exception to help user
pMessage = 'Process completed successfully';    
sMessage1 = '';
sMessage2 = '';
sMessage3 = 'pDimName: '|  pDimName|', pHierName: '|pHierName|', pTopLevel: '|pTopLevel|', pParent:'|pParent;
# Concatenate the parameters together to write into output cube. pParam1 | ', ' | pParam2 | ', ' | pParam3 | ....
pParameters =''; 
#EndRegion



DatasourceType = 'Subset';
DataSourceNameforServer = pDimName;
DataSourceDimensionSubset='All';
DimName = pDimname;
HierName = pHierName;
nSkip = 0;
nError = 0;

# Unwind the dimension by deleting all the elements in the main hierarchy
ExecuteProcess( 'SYS DIMUNWIND','pDimName', dimName );

#endregion
#region Metadata
# Skip Top level item
If (V1 @= pTopLevel);
	Itemskip;
Endif;

# Get Parent
vParent = attrs(DimName,V1,pParent);

# If no parent specified, skip Item
If (vParent @= '');
	Itemskip;
Endif;
nSkip =nskip + 1;

# If parent specified doesn't exist skip item
If (ElementIndex( DimName, HierName,vParent ) = 0);
	Itemskip;
Endif;
nError =nError + 1;


# Check if element has already been made a component of its parent and add it if not
IF(ElementIsComponent( DimName, HierName, V1, vParent ) = 0);
   HierarchyElementComponentAddDirect(DimName,HierName,vParent,V1,1);
ENDIF; 

#endregion
#region Epilog
#Region PROCESS LOGGING
# Put messages here to explain exceptions to user
if(nErrors>0);
    pMessage = sMessage1 |sMessage2 | sMessage3 ;   
endif;
ExecuteProcess('SYS Process Logging', 'pProcessName',GetProcessName(), 'pUser', tm1user, 'pPrologNow', pPrologNow, 'pErrors', nErrors, 'pMessage', pMessage, 'pParameters', pParameters);
####### pMessage and nErrors must be defined in the process to log with exeption handling.
#EndRegion

#endregion