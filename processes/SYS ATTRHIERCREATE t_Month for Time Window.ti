#region Prolog
# Generic process to create a time window hierarchy and/or subset using index attribute

#Region ####### PUT IN PROLOGUE OF PROCESS TO LOG: #######
pPrologNow = Now; 
# Catch errors with if statement and do nErrors = nErrors+1;
nErrors = 0;   
# Redefine message depending on if statement that handled the exception to help user
pMessage = 'Process Completed Successfully';    
sMessage1 = '';
sMessage2 = '';
sMessage3 = '';
# Concatenate the parameters together to write into output cube. pParam1 | ', ' | pParam2 | ', ' | pParam3 | ....
pParameters = 'pHierName: ' | pHierName | ', pWindowStart: ' | NumberToString( pWindowStart ) | ', pWindowEnd: '  | NumberToString( pWindowEnd ) | ', pCreateSubset: '  |  pCreateSubset |  'pCreateHierarchy: '  |   pCreateHierarchy ; 
#EndRegion

HierName = pHierName;
DimName = 't_Months';

SubName = HierName;
sToday = CellGetS( 'Model Parameters', 'Input', 'Current Period');
todaySerial = CellGetN( '}ElementAttributes_' | DimName, sToday, 'Index Serial' );

# mdx to return time window
mdx =  '{FILTER(TM1SubsetAll([t_Months].[t_Months]), (IIF([t_Months].[t_Months].CURRENTMEMBER.PROPERTIES("Index Serial")="", 0.0, STRTOVALUE([t_Months].[t_Months].CURRENTMEMBER.PROPERTIES("Index Serial"))) >='| numbertostring(todaySerial+pWindowStart) |') AND (IIF([t_Months].[t_Months].CURRENTMEMBER.PROPERTIES("Index Serial")="", 0.0, STRTOVALUE([t_Months].[t_Months].CURRENTMEMBER.PROPERTIES("Index Serial"))) <= '| numbertostring(todaySerial+pWindowEnd) |'))}';


#need subset for both hierarchy and subset
if(SubsetExists( DimName, SubName)=0);
    SubsetCreatebyMDX(SubName, mdx , 0 );
else;
    SubsetMDXSet( DimName, SubName, mdx );
endif;

if(pCreateHierarchy@='Yes');
# create hierarchy of the subset
nmax = SubsetGetSize( DimName, SubName );
n=1;
AttrName = 'Financial Year';

if(HierarchyExists( DimName, HierName )=1);
    HierarchyDeleteAllElements( DimName, HierName );
else;
    HierarchyCreate( DimName, HierName );
endif;
HierarchyElementInsertDirect( DimName, HierName, '', HierName | ' Total' , 'c' ); 

while(n<=nmax);
    ElName = SubsetGetElementName( DimName, SubName, n );
    AttrValue = ATTRS( DimName, ElName, AttrName );
    if(attrValue@='');
         nErrors = nErrors + 1;
     else;
          if(HierarchyElementExists( DimName, HierName, attrValue )=0);
              HierarchyElementInsertDirect( DimName, HierName, '', attrValue, 'c' );
              HierarchyElementComponentAddDirect( DimName, HierName,  HierName | ' Total' , attrValue, 1 );
           endif;
            HierarchyElementInsertDirect( DimName, HierName, '', elName , 'n' ); 
            HierarchyElementComponentAddDirect( DimName, HierName, attrValue, elName, 1 );
         endif;
    n = n+1;
end;
endif;
#endregion
#region Epilog
if(pCreateSubset@='No');
    SubsetDestroy( DimName, SubName );
endif;

#Region ####### PUT IN EPILOGUE OF PROCESS TO LOG: ##############
# Put messages here to explain exceptions to user
if(nErrors>0);
    pMessage = sMessage1 |sMessage2 | sMessage3 ;   
endif;
ExecuteProcess('SYS Process Logging', 'pProcessName',GetProcessName(), 'pUser', tm1user, 'pPrologNow', pPrologNow, 'pErrors', nErrors, 'pMessage', pMessage, 'pParameters', pParameters);
####### pMessage and nErrors must be defined in the process to log with exeption handling.
#EndRegion
#endregion