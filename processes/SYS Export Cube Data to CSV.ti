#region Prolog

# Extracts all leaf level data 
# Does include calculations 
# Does not include consolidations
# Is zero suppressed
# Programmed for up to 7 dimensions

#Region ####### PUT IN PROLOGUE OF PROCESS TO LOG: #######
pPrologNow = Now; 
# Catch errors with if statement and do nErrors = nErrors+1;
nErrors = 0;   
# Redefine message depending on if statement that handled the exception to help user
pMessage = 'Process Completed Successfully';    
sMessage1 = '';
sMessage2 = '';
sMessage3 = '';
# Concatenate the parameters together to write into output cube. pParam1 | ', ' | pParam2 | ', ' | pParam3 | ....
pParameters ='pCube: '|pCube; 
#EndRegion


# Create view for exporting
sView = GetProcessName|' Export '|pCube;
sSubset = GetProcessName|' Export '|pCube;
nTemp = 1;

sFileLocation = GetProcessErrorFileDirectory;
sFileLocation = Subst(sFileLocation, 1, LONG( sFileLocation )-5)|'Data\Model_Upload';
sFileName = pCube | ' Extract.csv';

ViewDestroy( pCube, sView );
ViewCreate( pCube, sView, nTemp );

nDim=CubeDimensionCountGet( pCube );
iDim = 1;
While (iDim <= nDim);
  sDim = TABDIM( pCube, iDim );
  IF(SubsetExists( sDim, sSubset )<>0);
      SubsetDestroy( sDim, sSubset );
  Endif;
    SubsetCreate( sDim, sSubset, nTemp );
    SubsetMDXSet( sDim, sSubset, 'TM1Filterbylevel(TM1SubsetAll(['| sDim |']),0)' );
    SubsetMDXSet( sDim, sSubset, '' );
    ViewSubsetAssign( pCube, sView, sDim, sSubset );
iDim = iDim+1;
End;



# Update Source view
ViewExtractSkipCalcsSet (pCube, sView, 0);
ViewExtractSkipRuleValuesSet (pCube, sView, 0);
ViewExtractSkipZeroesSet (pCube, sView, 1);

DataSourceCubeView = sView;
DatasourceNameForClient = pCube;
DatasourceNameForServer = pCube;
DatasourceType = 'VIEW';

nLine=1;
sHeader = '';
#endregion
#region Data

# Create header line on CSV
IF(nLine=1);
  nDim=CubeDimensionCountGet( pCube );
  IF(nDim = 2);
    ASCIIOutput( sFileLocation | '\' | sFileName, TABDIM( pCube, 1 ), TABDIM( pCube, 2 ), 'Value');
  ELSEIF(nDim = 3);
    ASCIIOutput( sFileLocation | '\' | sFileName, TABDIM( pCube, 1 ), TABDIM( pCube, 2 ), TABDIM( pCube, 3 ), 'Value');
  ELSEIF(nDim = 4);
    ASCIIOutput( sFileLocation | '\' | sFileName, TABDIM( pCube, 1 ), TABDIM( pCube, 2 ), TABDIM( pCube, 3 ), TABDIM( pCube, 4 ), 'Value');
  ELSEIF(nDim = 5);
    ASCIIOutput( sFileLocation | '\' | sFileName, TABDIM( pCube, 1 ), TABDIM( pCube, 2 ), TABDIM( pCube, 3 ), TABDIM( pCube, 4 ), TABDIM( pCube, 5 ), 'Value');
  ELSEIF(nDim = 6);
    ASCIIOutput( sFileLocation | '\' | sFileName, TABDIM( pCube, 1 ), TABDIM( pCube, 2 ), TABDIM( pCube, 3 ), TABDIM( pCube, 4 ), TABDIM( pCube, 5 ), TABDIM( pCube, 6 ), 'Value');
  ELSEIF(nDim = 7);
    ASCIIOutput( sFileLocation | '\' | sFileName, TABDIM( pCube, 1 ), TABDIM( pCube, 2 ), TABDIM( pCube, 3 ), TABDIM( pCube, 4 ), TABDIM( pCube, 5 ), TABDIM( pCube, 6 ), TABDIM( pCube, 7 ), 'Value');
  #ELSEIF(nDim = 8);
    #ASCIIOutput( sFileLocation | '\' | sFileName, TABDIM( pCube, 1 ), TABDIM( pCube, 2 ), TABDIM( pCube, 3 ), TABDIM( pCube, 4 ), TABDIM( pCube, 5 ), TABDIM( pCube, 6 ), TABDIM( pCube, 7 ), TABDIM( pCube, 8 ), 'Value');
  #ELSEIF(nDim = 9);
    #ASCIIOutput( sFileLocation | '\' | sFileName, TABDIM( pCube, 1 ), TABDIM( pCube, 2 ), TABDIM( pCube, 3 ), TABDIM( pCube, 4 ), TABDIM( pCube, 5 ), TABDIM( pCube, 6 ), TABDIM( pCube, 7 ), TABDIM( pCube, 8 ), TABDIM( pCube, 9 ), 'Value');
  Else;
    ItemReject( 'Cube has more than 7 dimensions' );
  EndIf;
  nLine=2;
Endif;

# Export line depends on number of dimnesions in the cube
IF(nDim = 2);
  ASCIIOutput( sFileLocation | '\' | sFileName, v1, v2, v3 );
ELSEIF(nDim = 3);
  ASCIIOutput( sFileLocation | '\' | sFileName, v1, v2, v3, v4 );
ELSEIF(nDim = 4);
  ASCIIOutput( sFileLocation | '\' | sFileName, v1, v2, v3, v4, v5 );
ELSEIF(nDim = 5);
  ASCIIOutput( sFileLocation | '\' | sFileName, v1, v2, v3, v4, v5, v6 );
ELSEIF(nDim = 6);
  ASCIIOutput( sFileLocation | '\' | sFileName, v1, v2, v3, v4, v5, v6, v7 );
ELSEIF(nDim = 7);
  ASCIIOutput( sFileLocation | '\' | sFileName, v1, v2, v3, v4, v5, v6, v7, v8 );
#ELSEIF(nDim = 8);
  #ASCIIOutput( sFileLocation | '\' | sFileName, v1, v2, v3, v4, v5, v6, v7, v8, v9 );
#ELSEIF(nDim = 9);
  #ASCIIOutput( sFileLocation | '\' | sFileName, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10 );
EndIf;
#endregion
#region Epilog
#Region ####### PUT IN EPILOGUE OF PROCESS TO LOG: ##############
# Put messages here to explain exceptions to user
if(nErrors>0);
    pMessage = sMessage1 |sMessage2 | sMessage3 ;   
endif;
ExecuteProcess('SYS Process Logging', 'pProcessName',GetProcessName(), 'pUser', tm1user, 'pPrologNow', pPrologNow, 'pErrors', nErrors, 'pMessage', pMessage, 'pParameters', pParameters);
####### pMessage and nErrors must be defined in the process to log with exeption handling.
#EndRegion

#endregion