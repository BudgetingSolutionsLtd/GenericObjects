#region Prolog
#Region ####### PUT IN PROLOGUE OF PROCESS TO LOG: #######
pPrologNow = Now; 
# Catch errors with if statement and do nErrors = nErrors+1;
nErrors = 0;   
# Redefine message depending on if statement that handled the exception to help user
pMessage = 'Process completed successfully';    
sMessage1 = '';
sMessage2 = '';
sMessage3 = '';
# Concatenate the parameters together to write into output cube. pParam1 | ', ' | pParam2 | ', ' | pParam3 | ....
pParameters ='pDimName: '|pDimName; 
#EndRegion

# Set Parameters
DimName = pDimname;
HierName = pHierName;
SubsetName = 'All Members';

# Make sure there is a subset 'All Members' in the hierarchy
IF(HierarchySubsetExists( DimName, HierName, SubsetName )=0);
    HierarchySubsetCreate( DimName, HierName, SubsetName );
  Else;
    HierarchySubsetDeleteAllElements( DimName, HierName, SubsetName );
Endif;

# Populate the 'All Members' subset
sMDX = '{['|DimName|'].['|HierName|'].['|SubsetName|']}';
HierarchySubsetMDXSet( DimName, HierName, SubsetName, sMDX );
HierarchySubsetMDXSet( DimName, HierName, SubsetName, '' );


# Initialise Counters
vIndex = 1;
vHierSize = HierarchySubsetGetSize(DimName,HierName,SubsetName);

# Loop through all elements and delete consolidated elements from hierarchy
WHILE(vIndex < vHierSize);
    vElementName = HierarchySubsetGetElementName(DimName,HierName,SubsetName, vIndex);
    IF(ElementLevel( DimName, HierName, vElementName ) <> 0);
        HIERARCHYELEMENTDELETE(DimName, HierName,vElementName );
    endif;
    vIndex = vIndex + 1;
END;






#endregion
#region Epilog
#Region ####### PUT IN EPILOGUE OF PROCESS TO LOG: ##############
# Put messages here to explain exceptions to user
if(nErrors>0);
    pMessage = sMessage1 |sMessage2 | sMessage3 ;   
endif;
ExecuteProcess('SYS Process Logging', 'pProcessName',GetProcessName(), 'pUser', tm1user, 'pPrologNow', pPrologNow, 'pErrors', nErrors, 'pMessage', pMessage, 'pParameters', pParameters);
####### pMessage and nErrors must be defined in the process to log with exeption handling.
#EndRegion

#endregion